計劃任務
1.在指定的時間執行命令。
    at - 將任務排隊，在指定的時間執行。
    atq - 查看待執行的任務隊列。
    atrm - 從隊列中刪除待執行的任務。

指定3天以後下午5點要執行的任務。
    [root ~]# at 5pm+3days
    at> rm -f /root/*.html
    at> <EOT>
    job 9 at Wed Jun  5 17:00:00 2019

查看待執行的任務隊列。
    [root ~]# atq
    9       Wed Jun  5 17:00:00 2019 a root

從隊列中刪除指定的任務。
    [root ~]$ atrm 9

2.計劃任務表 - crontab。
    [root ~]# crontab -e
    * * * * * echo "hello, world!" >> /root/hello.txt
    59 23 * * * rm -f /root/*.log
#說明：輸入crontab -e命令會打開vim來編輯Cron表達式並指定觸發的任務，上面我們定制了兩個計劃任務，一個是每分鐘向/root目錄下的hello.txt中追加輸出hello, world!；另一個是每天23時59分執行刪除/root目錄下以log為後綴名的文件。如果不知道Cron表達式如何書寫，可以參照/etc/crontab文件中的提示（下面會講到）或者用搜索引擎找一下“Cron表達式在線生成器”來生成Cron表達式。

和crontab相關的文件在/etc目錄下，通過修改/etc目錄下的crontab文件也能夠定制計劃任務。
    [root ~]# cd /etc
    [root etc]# ls -l | grep cron
    -rw-------.  1 root root      541 Aug  3  2017 anacrontab
    drwxr-xr-x.  2 root root     4096 Mar 27 11:56 cron.d
    drwxr-xr-x.  2 root root     4096 Mar 27 11:51 cron.daily
    -rw-------.  1 root root        0 Aug  3  2017 cron.deny
    drwxr-xr-x.  2 root root     4096 Mar 27 11:50 cron.hourly
    drwxr-xr-x.  2 root root     4096 Jun 10  2014 cron.monthly
    -rw-r--r--   1 root root      493 Jun 23 15:09 crontab
    drwxr-xr-x.  2 root root     4096 Jun 10  2014 cron.weekly
    [root etc]# vim crontab
    1 SHELL=/bin/bash
    2 PATH=/sbin:/bin:/usr/sbin:/usr/bin
    3 MAILTO=root
    4
    5 # For details see man 4 crontabs
    6
    7 # Example of job definition:
    8 # .---------------- minute (0 - 59)
    9 # |  .------------- hour (0 - 23)
    10 # |  |  .---------- day of month (1 - 31)
    11 # |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
    12 # |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
    13 # |  |  |  |  |
    14 # *  *  *  *  * user-name  command to be executed