編輯器 - vim
1.啟動vim。可以通過vi或vim命令來啟動vim，啟動時可以指定文件名來打開一個文件，如果沒有指定文件名，也可以在保存的時候指定文件名。
    [root ~]# vim guess.py

2.命令模式、編輯模式和末行模式：啟動vim進入的是命令模式（也稱為Normal模式），在命令模式下輸入英文字母i會進入編輯模式（Insert模式），屏幕下方出現-- INSERT --提示；在編輯模式下按下Esc會回到命令模式，此時如果輸入英文:會進入末行模式，在末行模式下輸入q!可以在不保存當前工作的情況下強行退出vim；在命令模式下輸入v會進入可視模式（Visual模式），可以用光標選擇一個區域再完成對應的操作。

3.保存和退出vim：在命令模式下輸入: 進入末行模式，輸入wq可以實現保存退出；如果想放棄編輯的內容輸入q!強行退出，這一點剛才已經提到過了；在命令模式下也可以直接輸入ZZ實現保存退出。如果只想保存文件不退出，那麼可以在末行模式下輸入w；可以在w後面輸入空格再指定要保存的文件名。

4.光標操作。
    在命令模式下可以通過h、j、k、l來控制光標向左、下、上、右的方向移動，可以在字母前輸入數字來表示移動的距離，例如：10h表示向左移動10個字符。
    在命令模式下可以通過Ctrl+y和Ctrl+e來實現向上、向下滾動一行文本的操作，可以通過Ctrl+f和Ctrl+b來實現向前和向後翻頁的操作。
    在命令模式下可以通過輸入英文字母G將光標移到文件的末尾，可以通過gg將光標移到文件的開始，也可以通過在G前輸入數字來將光標移動到指定的行。

5.文本操作。
    刪除：在命令模式下可以用dd來刪除整行；可以在dd前加數字來指定刪除的行數；可以用d$來實現刪除從光標處刪到行尾的操作，也可以通過d0來實現從光標處刪到行首的操作；如果想刪除一個單詞，可以使用dw；如果要刪除全文，可以在輸入:%d（其中:用來從命令模式進入末行模式）。
    複製和粘貼：在命令模式下可以用yy來複製整行；可以在yy前加數字來指定複製的行數；可以通過p將復制的內容粘貼到光標所在的地方。
    撤銷和恢復：在命令模式下輸入u可以撤銷之前的操作；通過Ctrl+r可以恢復被撤銷的操作。
    對內容進行排序：在命令模式下輸入%!sort。

6.查找和替換。
    查找操作需要輸入/進入末行模式並提供正則表達式來匹配與之對應的內容，例如：/doc.*\.，輸入n來向前搜索，也可以輸入N來向後搜索。   
    替換操作需要輸入:進入末行模式並指定搜索的範圍、正則表達式以及替換後的內容和匹配選項，例如：:1,$s/doc.*/hello/gice，其中：
        g - global：全局匹配。
        i - ignore case：忽略大小寫匹配。
        c - confirm：替換時需要確認。
        e - error：忽略錯誤。

7.參數設定：在輸入:進入末行模式後可以對vim進行設定。
    設置Tab鍵的空格數：set ts=4
    設置顯示/不顯示行號：set nu / set nonu
    設置啟用/關閉高亮語法：syntax on / syntax off
    設置顯示標尺（光標所在的行和列）： set ruler
    設置啟用/關閉搜索結果高亮：set hls / set nohls
    #說明：如果希望上面的這些設定在每次啟動vim時都能自動生效，需要將這些設定寫到用戶主目錄下的.vimrc文件中。

8.高級技巧
    比較多個文件。
    [root ~]# vim -d foo.txt bar.txt
    
    打開多個文件。
    [root ~]# vim foo.txt bar.txt hello.txt
        啟動vim後只有一個窗口顯示的是foo.txt，可以在末行模式中輸入ls查看到打開的三個文件，也可以在末行模式中輸入b <num>來顯示另一個文件，例如可以用:b 2將bar.txt顯示出來，可以用:b 3將hello.txt顯示出來。

    拆分和切換窗口。
        可以在末行模式中輸入sp或vs來實現對窗口的水平或垂直拆分，這樣我們就可以同時打開多個編輯窗口，通過按兩次Ctrl+w就可以實現編輯窗口的切換，在一個窗口中執行退出操作只會關閉對應的窗口，其他的窗口繼續保留。

    映射快捷鍵：在vim下可以將一些常用操作映射為快捷鍵來提升工作效率。
        例子1：在命令模式下輸入F4執行從第一行開始刪除10000行代碼的操作。
        :map <F4> gg10000dd。

        例子2：在編輯模式下輸入__main直接補全為if __name__ == '__main__':。
        :inoremap __main if __name__ == '__main__':

        #說明：上面例子2的inoremap中的i表示映射的鍵在編輯模式使用， nore表示不要遞歸，這一點非常重要，否則如果鍵對應的內容中又出現鍵本身，就會引發遞歸（相當於進入了死循環）。如果希望映射的快捷鍵每次啟動vim時都能生效，需要將映射寫到用戶主目錄下的.vimrc文件中。

    錄製宏。
        在命令模式下輸入qa開始錄製宏（其中a是寄存器的名字，也可以是其他英文字母或0-9的數字）。
        執行你的操作（光標操作、編輯操作等），這些操作都會被錄製下來。
        如果錄製的操作已經完成了，按q結束錄製。
        通過@a（a是剛才使用的寄存器的名字）播放宏，如果要多次執行宏可以在前面加數字，例如100@a表示將宏播放100次。
        可以試一試下面的例子來體驗錄製宏的操作，該例子來源於Harttle Land網站，該網站上提供了很多關於vim的使用技巧，有興趣的可以了解一下。