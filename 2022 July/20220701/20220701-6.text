在創建索引時，我們還可以使用複合索引、函數索引（MySQL 5.7 開始支持），用好複合索引實現索引覆蓋可以減少不必要的排序和回表操作，這樣就會讓查詢的性能成倍的提升，有興趣的讀者可以自行研究。

我們簡單的為大家總結一下索引的設計原則：
    1.最適合索引的列是出現在WHERE子句和連接子句中的列。
    2.索引列的基數越大（取值多、重複值少），索引的效果就越好。
    3.使用前綴索引可以減少索引佔用的空間，內存中可以緩存更多的索引。
    4.索引不是越多越好，雖然索引加速了讀操作（查詢），但是寫操作（增、刪、改）都會變得更慢，因為數據的變化會導致索引的更新，就如同書籍章節的增刪需要更新目錄一樣。
    5.使用 InnoDB 存儲引擎時，表的普通索引都會保存主鍵的值，所以主鍵要盡可能選擇較短的數據類型，這樣可以有效的減少索引佔用的空間，提升索引的緩存效果。

最後，還有一點需要說明，InnoDB 使用的 B-tree 索引，數值類型的列除了等值判斷時索引會生效之外，使用>、<、>=、<=、BETWEEN...AND... 、<>時，索引仍然生效；對於字符串類型的列，如果使用不以通配符開頭的模糊查詢，索引也是起作用的，但是其他的情況會導致索引失效，這就意味著很有可能會做全表查詢。

視圖
視圖是關係型數據庫中將一組查詢指令構成的結果集組合成可查詢的數據表的對象。簡單的說，視圖就是虛擬的表，但與數據表不同的是，數據表是一種實體結構，而視圖是一種虛擬結構，你也可以將視圖理解為保存在數據庫中被賦予名字的 SQL 語句。

使用視圖可以獲得以下好處：
    1.可以將實體數據表隱藏起來，讓外部程序無法得知實際的數據結構，讓訪問者可以使用表的組成部分而不是整個表，降低數據庫被攻擊的風險。
    2.在大多數的情況下視圖是只讀的（更新視圖的操作通常都有諸多的限制），外部程序無法直接透過視圖修改數據。
    3.重用 SQL 語句，將高度複雜的查詢包裝在視圖表中，直接訪問該視圖即可取出需要的數據；也可以將視圖視為數據表進行連接查詢。
    4.視圖可以返回與實體數據表不同格式的數據，在創建視圖的時候可以對數據進行格式化處理。

創建視圖。
    -- 創建視圖
    create view `vw_avg_score` 
    as 
        select `stu_id`, round(avg(`score`), 1) as `avg_score` 
        from `tb_record` group by `stu_id`;

    -- 基於已有的視圖創建視圖
    create view `vw_student_score` 
    as 
        select `stu_name`, `avg_score` 
        from `tb_student` natural join `vw_avg_score`;

#提示：因為視圖不包含數據，所以每次使用視圖時，都必須執行查詢以獲得數據，如果你使用了連接查詢、嵌套查詢創建了較為複雜的視圖，你可能會發現查詢性能下降得很厲害。因此，在使用複雜的視圖前，應該進行測試以確保其性能能夠滿足應用的需求。

使用視圖。
    select * from `vw_student_score` order by `avg_score` desc;

    +--------------+----------+
    | stuname      | avgscore |
    +--------------+----------+
    | 杨过         |     95.6 |
    | 任我行       |     53.5 |
    | 王语嫣       |     84.3 |
    | 纪嫣然       |     73.8 |
    | 岳不群       |     78.0 |
    | 东方不败     |     88.0 |
    | 项少龙       |     92.0 |
    +--------------+----------+

既然視圖是一張虛擬的表，那麼視圖的中的數據可以更新嗎？視圖的可更新性要視具體情況而定，以下類型的視圖是不能更新的：
    1.使用了聚合函數（SUM、MIN、MAX、AVG、COUNT等）、DISTINCT、GROUP BY、HAVING、UNION或者UNION ALL的視圖。
    2.SELECT中包含了子查詢的視圖。
    3.FROM子句中包含了一個不能更新的視圖的視圖。
    4.WHERE子句的子查詢引用了FROM子句中的表的視圖。

刪除視圖。
    drop view vw_student_score;
#說明：如果希望更新視圖，可以先用上面的命令刪除視圖，也可以通過create or replace view來更新視圖。

視圖的規則和限制。
    1.視圖可以嵌套，可以利用從其他視圖中檢索的數據來構造一個新的視圖。視圖也可以和表一起使用。
    2.創建視圖時可以使用order by子句，但如果從視圖中檢索數據時也使用了order by，那麼該視圖中原先的order by會被覆蓋。
    3.視圖無法使用索引，也不會激發觸發器（實際開發中因為性能等各方面的考慮，通常不建議使用觸發器，所以我們也不對這個概念進行介紹）的執行。