NoSQL入門
NoSQL概述
如今，大多數的計算機系統（包括服務器、PC、移動設備等）都會產生龐大的數據量。其實，早在2012年的時候，全世界每天產生的數據量就達到了2.5EB（艾字節，）。這些數據有很大一部分是由關係型數據庫來存儲和管理的。早在1970年，E.F.Codd發表了論述關係型數據庫的著名論文“A relational model of data for large shared data banks”，這篇文章奠定了關係型數據庫的基礎並在接下來的數十年時間內產生了深遠的影響。實踐證明，關係型數據庫是實現數據持久化最為重要的方式，它也是大多數應用在選擇持久化方案時的首選技術。

NoSQL是一項全新的數據庫革命性運動，雖然它的歷史可以追溯到1998年，但是NoSQL真正深入人心並得到廣泛的應用是在進入大數據時候以後，業界普遍認為NoSQL是更適合大數據存儲的技術方案，這才使得NoSQL的發展達到了前所未有的高度。 2012年《紐約時報》的一篇專欄中寫到，大數據時代已經降臨，在商業、經濟及其他領域中，決策將不再基於經驗和直覺而是基於數據和分析而作出。事實上，在天文學、氣象學、基因組學、生物學、社會學、互聯網搜索引擎、金融、醫療、社交網絡、電子商務等諸多領域，由於數據過於密集和龐大，在數據的分析和處理上也遇到了前所未有的限制和阻礙，這一切都使得對大數據處理技術的研究被提升到了新的高度，也使得各種NoSQL的技術方案進入到了公眾的視野。

NoSQL數據庫按照其存儲類型可以大致分為以下幾類：
類型	   部分代表	                          特點
列族數據庫	HBase/Cassandra/Hypertable	      顧名思義是按列存儲數據的。最大的特點是方便存儲結構化和半結構化數據，方便做數據壓縮，對針對某一列或者某幾列的查詢有非常大的I/O優勢，適合於批量數據處理和即時查詢。
文檔數據庫	MongoDB/CouchDB/ElasticSearch	  文檔數據庫一般用類JSON格式存儲數據，存儲的內容是文檔型的。這樣也就有機會對某些字段建立索引，實現關係數據庫的某些功能，但不提供對參照完整性和分佈事務的支持。
KV數據庫   DynamoDB/Redis/LevelDB	         可以通過key快速查詢到其value，有基於內存和基於磁盤兩種實現方案。
圖數據庫	Neo4J/FlockDB/JanusGraph	      使用圖結構進行語義查詢的數據庫，它使用節點、邊和屬性來表示和存儲數據。圖數據庫從設計上，就可以簡單快速的檢索難以在關係系統中建模的複雜層次結構。
對像數據庫	db4o/Versant	                  通過類似面向對象語言的語法操作數據庫，通過對象的方式存取數據。
#說明：想了解更多的NoSQL數據庫，可以訪問http://nosql-database.org/。

Redis概述
Redis是一種基於鍵值對的NoSQL數據庫，它提供了對多種數據類型（字符串、哈希、列表、集合、有序集合、位圖等）的支持，能夠滿足很多應用場景的需求。 Redis將數據放在內存中，因此讀寫性能是非常驚人的。與此同時，Redis也提供了持久化機制，能夠將內存中的數據保存到硬盤上，在發生意外狀況時數據也不會丟掉。此外，Redis還支持鍵過期、地理信息運算、發布訂閱、事務、管道、Lua腳本擴展等功能，總而言之，Redis的功能和性能都非常強大，如果項目中要實現高速緩存和消息隊列這樣的服務，直接交給Redis就可以了。目前，國內外很多著名的企業和商業項目都使用了Redis，包括：Twitter、Github、StackOverflow、新浪微博、百度、優酷土豆、美團、小米、唯品會等。

Redis簡介
2008年，一個名為Salvatore Sanfilippo的程序員為他開發的LLOOGG項目定制了專屬的數據庫（因為之前他無論怎樣優化MySQL，系統性能已經無法再提升了），這項工作的成果就是Redis的初始版本。後來他將Redis的代碼放到了全球最大的代碼託管平台Github，從那以後，Redis引發了大量開發者的好評和關注，繼而有數百人參與了Redis的開發和維護，這使得Redis的功能越來越強大和性能越來越好。
    Redis是REmote DIctionary Server的縮寫，它是一個用ANSI C編寫的高性能的key-value存儲系統，與其他的key-value存儲系統相比，Redis有以下一些特點（也是優點）：
    Redis的讀寫性能極高，並且有豐富的特性（發布/訂閱、事務、通知等）。
    Redis支持數據的持久化（RDB和AOF兩種方式），可以將內存中的數據保存在磁盤中，重啟的時候可以再次加載進行使用。
    Redis支持多種數據類型，包括：string、hash、list、set，zset、bitmap、hyperloglog等。
    Redis支持主從復制（實現讀寫分析）以及哨兵模式（監控master是否宕機並自動調整配置）。
    Redis支持分佈式集群，可以很容易的通過水平擴展來提升系統的整體性能。
    Redis基於TCP提供的可靠傳輸服務進行通信，很多編程語言都提供了Redis客戶端支持。

Redis的應用場景
    1.高速緩存 - 將不常變化但又經常被訪問的熱點數據放到Redis數據庫中，可以大大降低關係型數據庫的壓力，從而提升系統的響應性能。
    2.排行榜 - 很多網站都有排行榜功能，利用Redis中的列表和有序集合可以非常方便的構造各種排行榜系統。
    3.商品秒殺/投票點贊 - Redis提供了對計數操作的支持，網站上常見的秒殺、點贊等功能都可以利用Redis的計數器通過+1或-1的操作來實現，從而避免了使用關係型數據的update操作。
    4.分佈式鎖 - 利用Redis可以跨多台服務器實現分佈式鎖（類似於線程鎖，但是能夠被多台機器上的多個線程或進程共享）的功能，用於實現一個阻塞式操作。
    5.消息隊列 - 消息隊列和高速緩存一樣，是一個大型網站不可缺少的基礎服務，可以實現業務解耦和非實時業務削峰等特性，這些我們都會在後面的項目中為大家展示。

Redis的安裝和配置
可以使用Linux系統的包管理工具（如yum）來安裝Redis，也可以通過在Redis的官方網站下載Redis的源代碼，解壓縮解歸檔之後通過make工具對源代碼進行構建並安裝，在更新這篇文檔時，Redis官方提供的最新穩定版本是Redis 5.0.10。

下載：
    wget https://download.redis.io/releases/redis-5.0.10.tar.gz

解壓縮和解歸檔：
    tar -zxf redis-5.0.10.tar.gz

進入Redis源代碼目錄：
    cd redis-5.0.10

構建和安裝：
    make && make install

在redis源代碼目錄下有一個名為redis.conf的配置文件，我們可以先查看一下該文件。
    vim redis.conf