Django快速上手
Web開發的早期階段，開發者需要手動編寫每個頁面，例如一個新聞門戶網站，每天都要修改它的HTML頁面，隨著網站規模和體量的增大，這種做法一定是非常糟糕的。為了解決這個問題，開發人員想到了用程序來為Web服務器生成動態內容，也就是說網頁中的動態內容不再通過手動編寫而是通過程序自動生成。最早的時候，這項技術被稱為CGI（公共網關接口），當然隨著時間的推移，CGI暴露出的問題也越來越多，例如大量重複的樣板代碼，總體性能較為低下等。在時代呼喚新英雄的背景下，PHP、ASP、JSP這類Web應用開發技術在上世紀90年代中後期如雨後春筍般湧現。通常我們說的Web應用是指通過瀏覽器來訪問網絡資源的應用程序，因為瀏覽器的普及性以及易用性，Web應用使用起來方便簡單，免除了安裝和更新應用程序帶來的麻煩；站在開發者的角度，也不用關心用戶使用什麼樣的操作系統，甚至不用區分是PC端還是移動端。

Web應用機制和術語
下圖向我們展示了Web應用的工作流程，其中涉及到的術語如下表所示。

   1.輸入URL   Web   2.詢問IP地址    DNS    
用 --------->  　   ------------->  服
戶 <---------  　   <-------------  務
   6.顯示頁面　 瀏　       IP地址     器

　　　　　　　　 覽     3.HTTP通信    web   4.執行Web應用   Web
                   ------------->  服   ------------->  應
　　　　　　　　 器   <-------------  務   <-------------  用
                   5.過響應返回內容  器         內容
#說明：相信有經驗的讀者會發現，這張圖中其實還少了很多東西，例如反向代理服務器、數據庫服務器、防火牆等，而且圖中的每個節點在實際項目部署時可能是一組節點組成的集群。當然，如果你對這些沒有什麼概念也不要緊，繼續下去就行了，後面會給大家一一講解的。

術語        解釋
URL/URI　　 統一資源定位符/統一資源標識符，網絡資源的唯一標識
域名	　  與Web服務器地址對應的一個易於記憶的字符串名字
DNS	　　　  域名解析服務，可以將域名轉換成對應的IP地址
IP地址	　  網絡上的主機的身份標識，通過IP地址可以區分不同的主機
HTTP	　 超文本傳輸協議，構建在TCP之上的應用級協議，萬維網數據通信的基礎
反向代理    代理客戶端向服務器發出請求，然後將服務器返回的資源返回給客戶端
Web服務器   接受HTTP請求，然後返回HTML文件、純文本文件、圖像等資源給請求者
Nginx	　 高性能的Web服務器，也可以用作反向代理，負載均衡 和 HTTP緩存

HTTP協議
這裡我們先費一些筆墨來說說HTTP這個協議。 HTTP（超文本傳輸協議）是構建於TCP（傳輸控制協議）之上應用級協議，它利用了TCP提供的可靠的傳輸服務實現了Web應用中的數據交換。
按照維基百科上的介紹，設計HTTP最初的目的是為了提供一種發布和接收HTML頁面的方法，也就是說這個協議是瀏覽器和Web服務器之間傳輸的數據的載體。
關於這個協議的詳細信息以及目前的發展狀況，大家可以閱讀《HTTP 協議入門》、《互聯網協議入門》系列以及《圖解HTTPS協議》這幾篇文章進行了解。
下圖是我在四川省網絡通信技術重點實驗室學習和工作期間使用開源協議分析工具Ethereal（抓包工具WireShark的前身）截取的訪問百度首頁時的HTTP請求和響應的報文（協議數據），
由於Ethereal截取的是經過網絡適配器的數據，因此可以清晰的看到從物理鏈路層到應用層的協議數據。

Django概述
Python的Web框架有上百個，比它的關鍵字還要多。所謂Web框架，就是用於開發Web服務器端應用的基礎設施，說得通俗一點就是一系列封裝好的模塊和工具。
事實上，即便沒有Web框架，我們仍然可以通過socket或CGI來開發Web服務器端應用，但是這樣做的成本和代價在商業項目中通常是不能接受的。
通過Web框架，我們可以化繁為簡，降低創建、更新、擴展應用程序的工作量。剛才我們說到Python有上百個Web框架，這些框架包括Django、Flask、Tornado、Sanic、Pyramid、Bottle、Web2py、web.py等。

在上述Python的Web框架中，Django無疑是最有代表性的重量級選手，開發者可以基於Django快速的開發可靠的Web應用程序，
因為它減少了Web開發中不必要的開銷，對常用的設計和開發模式進行了封裝，並對MVC架構提供了支持（Django中稱之為MTV架構）。
MVC是軟件系統開發領域中一種放之四海而皆準的架構，它將系統中的組件分為模型（Model）、視圖（View）和控制器（Controller）三個部分並藉此實現模型（數據）和視圖（顯示）的解耦合。
由於模型和視圖進行了分離，所以需要一個中間人將解耦合的模型和視圖聯繫起來，扮演這個角色的就是控制器。
稍具規模的軟件系統都會使用MVC架構（或者是從MVC演進出的其他架構），Django項目中我們稱之為MTV，MTV中的M跟MVC中的M沒有區別，
就是代表數據的模型，T代表了網頁模板（顯示數據的視圖），而V代表了視圖函數，在Django框架中，視圖函數和Django框架本身一起扮演了MVC中C的角色。

Django框架誕生於2003年，它是一個在真正的應用中成長起來的項目，由勞倫斯出版集團旗下在線新聞網站的內容管理系統（CMS）研發團隊（主要是Adrian Holovaty和Simon Willison）開發，
以比利時的吉普賽爵士吉他手Django Reinhardt來命名。 Django框架在2005年夏天作為開源框架發布，使用Django框架能用很短的時間構建出功能完備的網站，
因為它代替程序員完成了那些重複乏味的勞動，剩下真正有意義的核心業務給程序員來開發，這一點就是對DRY（Don't Repeat Yourself）理念的最好踐行。
許多成功的網站和應用都是基於Python語言進行開發的，國內比較有代表性的網站包括：知乎、豆瓣網、果殼網、搜狐閃電郵箱、101圍棋網、海報時尚網、背書吧、堆糖、手機搜狐網、咕咚、愛福窩、果庫等，其中不乏使用了Django框架的產品。